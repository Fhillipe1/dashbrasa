import streamlit as st
import pandas as pd
import sys
import os

# Adiciona a pasta raiz ao path para encontrar o m√≥dulo de utilidades
script_dir = os.path.dirname(os.path.abspath(__file__))
project_root = os.path.dirname(script_dir)
if project_root not in sys.path:
    sys.path.insert(0, project_root)

# Importa a fun√ß√£o do nosso novo m√≥dulo
from modules.utils import carregar_dados_brutos

st.set_page_config(page_title="Debug de Dados", page_icon="üî¨")
st.title("üî¨ Ferramenta de Diagn√≥stico de Dados")
st.warning("Esta p√°gina √© para uso t√©cnico. Use o bot√£o abaixo para inspecionar o processamento de datas do seu relat√≥rio.")

if st.button("Iniciar Inspe√ß√£o de Datas"):
    df = carregar_dados_brutos()

    if df is not None:
        st.divider()
        # ETAPA 1: INSPECIONAR OS DADOS BRUTOS
        st.subheader("ETAPA 1: Dados Brutos do Excel")
        st.write("Estes s√£o os 10 primeiros valores da coluna 'Data da venda' exatamente como lidos do arquivo:")
        st.code(df['Data da venda'].head(10).to_list())

        st.divider()

        # ETAPA 2: CONVERTER E VERIFICAR O FUSO HOR√ÅRIO
        st.subheader("ETAPA 2: Convers√£o para Datetime")
        # Converte para datetime, assumindo que o formato √© Dia/M√™s/Ano
        df['data_convertida'] = pd.to_datetime(df['Data da venda'], dayfirst=True, errors='coerce')
        
        st.write("Os mesmos valores ap√≥s a convers√£o com `pd.to_datetime`:")
        st.code(df['data_convertida'].head(10).to_list())
        
        fuso_horario = df['data_convertida'].dt.tz
        st.write(f"**Fuso Hor√°rio (Timezone) detectado automaticamente:** `{fuso_horario}`")
        if fuso_horario is None:
            st.info("A data √© 'ing√™nua' (naive), ou seja, n√£o tem fuso hor√°rio definido. Isso √© o normal e esperado.")
        else:
            st.error(f"ALERTA: A data foi interpretada como estando no fuso {fuso_horario}. Esta √© provavelmente a causa do problema.")

        st.divider()

        # ETAPA 3: APLICAR FUSO HOR√ÅRIO DE ARACAJU
        st.subheader("ETAPA 3: Aplicando o Fuso Hor√°rio de Aracaju")
        try:
            # 'tz_localize' atribui um fuso hor√°rio a datas ing√™nuas.
            if df['data_convertida'].dt.tz is None:
                df['data_localizada'] = df['data_convertida'].dt.tz_localize('America/Maceio', ambiguous='infer')
            else:
                # Se j√° tiver um fuso (ex: UTC), converte para o de Aracaju
                df['data_localizada'] = df['data_convertida'].dt.tz_convert('America/Maceio')
                
            st.write("Valores finais ap√≥s for√ßar a interpreta√ß√£o no fuso hor√°rio de Aracaju (-03:00):")
            st.code(df['data_localizada'].head(10).to_list())
            st.success("Compare os hor√°rios da ETAPA 1 com esta lista final. Eles devem ser iguais.")

        except Exception as e:
            st.error(f"Ocorreu um erro ao tentar aplicar o fuso hor√°rio: {e}")

    else:
        st.error("N√£o foi poss√≠vel carregar o relat√≥rio para a inspe√ß√£o.")
