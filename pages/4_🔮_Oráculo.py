# pages/3_游댩_Or치culo.py
import streamlit as st
import pandas as pd
from modules import oraculo_handler, visualization

# --- CONFIGURA칂츾O DA P츼GINA ---
st.set_page_config(layout="wide", page_title="Or치culo La Brasa")
visualization.aplicar_css_local("style/oraculo_style.css")

st.title("游댩 Or치culo La Brasa")
st.markdown("Converse com nosso analista de dados virtual. As respostas s칚o baseadas nos filtros aplicados no Dashboard Principal.")
st.markdown("---")

# --- L칍GICA DO CHAT ---

# Inicializa o modelo de IA e o hist칩rico do chat na sess칚o
if 'modelo_ia' not in st.session_state:
    st.session_state.modelo_ia = oraculo_handler.configurar_ia()
if "oraculo_messages" not in st.session_state:
    st.session_state.oraculo_messages = []

# Verifica se os dados j치 foram filtrados na p치gina principal
if 'df_filtrado_global' not in st.session_state:
    st.warning("Por favor, visite o 'Dashboard Principal' e aplique os filtros de data para que eu possa analisar os dados.", icon="丘멆잺")
    st.stop()

# Bot칚o para iniciar a an치lise e carregar o contexto
if not st.session_state.oraculo_messages:
    if st.button("Analisar Dados com o Or치culo", type="primary", use_container_width=True):
        with st.spinner("O Or치culo est치 estudando os dados..."):
            df_filtrado = st.session_state.get('df_filtrado_global', pd.DataFrame())
            df_cancelados = st.session_state.get('df_cancelados_filtrado_global', pd.DataFrame())
            
            contexto_dados = oraculo_handler.gerar_contexto_dados(df_filtrado, df_cancelados)
            
            prompt_inicial = f"""
            Contexto para an치lise:
            {contexto_dados}
            ---
            Pronto! J치 analisei os dados do per칤odo selecionado. O que voc칡 gostaria de saber?
            """
            st.session_state.oraculo_messages.append({"role": "assistant", "content": prompt_inicial})
            st.rerun()

# Exibe as mensagens do hist칩rico, se houver
for message in st.session_state.oraculo_messages:
    avatar = "游댩" if message["role"] == "assistant" else "游녻"
    with st.chat_message(message["role"], avatar=avatar):
        st.markdown(message["content"])

# S칩 exibe a caixa de input DEPOIS que a an치lise foi iniciada
if st.session_state.oraculo_messages:
    if prompt := st.chat_input("Qual a sua pergunta sobre os dados?"):
        # Adiciona a mensagem do usu치rio
        st.session_state.oraculo_messages.append({"role": "user", "content": prompt})
        
        # Gera e adiciona a resposta da IA
        with st.chat_message("user", avatar="游녻"):
            st.markdown(prompt)

        with st.chat_message("assistant", avatar="游댩"):
            with st.spinner("Processando..."):
                resposta = oraculo_handler.obter_resposta_ia(
                    st.session_state.modelo_ia, 
                    st.session_state.oraculo_messages
                )
                st.markdown(resposta)
        
        st.session_state.oraculo_messages.append({"role": "assistant", "content": resposta})
