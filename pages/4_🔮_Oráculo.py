# pages/3_游댩_Or치culo.py
import streamlit as st
from modules import oraculo_handler, visualization

# --- CONFIGURA칂츾O DA P츼GINA ---
st.set_page_config(layout="wide", page_title="Or치culo La Brasa")
visualization.aplicar_css_local("style/oraculo_style.css")

st.title("游댩 Or치culo La Brasa")
st.markdown("Converse com nosso analista de dados virtual. Fa칞a perguntas e obtenha insights!")
st.markdown("---")

# --- INICIALIZA칂츾O DO CHAT ---

# Configura a IA (usando cache para n칚o reconfigurar a cada intera칞칚o)
modelo_ia = oraculo_handler.configurar_ia()

# Inicializa o hist칩rico de mensagens na sess칚o se ainda n칚o existir
if "messages" not in st.session_state:
    st.session_state.messages = []

# Exibe as mensagens do hist칩rico
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

# --- L칍GICA DO CHAT ---

# Pega o input do usu치rio
if prompt := st.chat_input("Qual a sua pergunta?"):
    # Adiciona a mensagem do usu치rio ao hist칩rico e exibe na tela
    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(prompt)

    # Gera e exibe a resposta da IA
    with st.chat_message("assistant"):
        with st.spinner("O Or치culo est치 pensando..."):
            # Passa o prompt e o hist칩rico para a IA
            historico_relevante = st.session_state.messages.copy()
            resposta = oraculo_handler.obter_resposta_ia(modelo_ia, prompt, historico_relevante)
            st.markdown(resposta)
    
    # Adiciona a resposta da IA ao hist칩rico
    st.session_state.messages.append({"role": "assistant", "content": resposta})
